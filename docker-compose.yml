# docker-compose.yml
version: '3.8'

services:
  # === SERVICE REDIS ===
  redis:
    image: redis:7-alpine
    container_name: hemerson-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - hemerson-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # === SERVICE PRINCIPAL ===
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: production
    container_name: hemerson-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - hemerson-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

  # === NGINX REVERSE PROXY ===
  nginx:
    image: nginx:alpine
    container_name: hemerson-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-enabled:/etc/nginx/sites-enabled
      - nginx_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - hemerson-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # === MONITORING (OPTIONNEL) ===
  prometheus:
    image: prom/prometheus:latest
    container_name: hemerson-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - hemerson-network

# === VOLUMES ===
volumes:
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local

# === RÃ‰SEAU ===
networks:
  hemerson-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
